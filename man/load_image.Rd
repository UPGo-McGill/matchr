% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_image.R
\name{load_image}
\alias{load_image}
\title{Load image from file or URL}
\usage{
load_image(file, quiet = FALSE)
}
\arguments{
\item{file}{A vector of file paths or URLs which identify bitmapped images in
the JPEG, PNG, TIFF, or BMP file formats. If \code{file} is length-one, it can be
the path to a directory containing images. Elements of \code{file} which are URLs
must begin with "http", "https", "ftp" or "ftps".}

\item{quiet}{A logical scalar. Should the function execute quietly, or should
it return status updates throughout the function (default)?}
}
\value{
A \code{matchr_image} vector of the same length as the input vector.
}
\description{
\code{load_image} is a vectorized method for reading bitmaps (jpegs, pngs and
bmps) into memory as arrays of pixel values. It optionally supports parallel
processing (via \code{future} and \code{future.apply}) and progress
reporting.
}
\details{
\code{load_image} only supports 3-channel (RGB) or 1-channel (greyscale)
images; 4-channel (RGBA) images will have their alpha channel silently
dropped and 2-channel (greyscale with alpha) images will have \emph{only} their
alpha channel preserved, while images with 5 or more channels will return as
NA.

Because the memory requirements of storing image representations in memory
so large, it is usually not feasible to read in more than several hundred
images at a time with \code{load_image}. For these cases, use
\code{\link{create_signature}} directly on the input file paths. By default
this will read images with \code{load_image} 100 at a time before
generating the unique colour signatures used for image matching.
}
\examples{
\dontrun{
load_image(test_urls)
}
}
