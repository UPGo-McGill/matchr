% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrate_changes.R
\name{integrate_changes}
\alias{integrate_changes}
\title{Integrate changes in image matching}
\usage{
integrate_changes(result, change_table)
}
\arguments{
\item{result}{A data frame produced by \code{\link{identify_matches}} (with
\code{confirm = TRUE} or with \code{\link{confirm_matches}} subsequently run on
the results). Any additional fields added to the data frame will be preserved
in the output.}

\item{change_table}{A data frame produced by \code{\link{compare_images}}.}
}
\value{
The original data frame given in the \code{result} argument, with three
changes: 1) matches which were confirmed as "match" or "no match" will have
their value in the \code{match} field updated accordingly; 2) a \code{confirmed} field
will be added if not already present, and matches which were confirmed will
receive a value of TRUE (others will be FALSE); and 3) a \code{highlight} field
will be added with a value of TRUE for matches highlighted using the in-app
interface and FALSE otherwise.
}
\description{
\code{integrate_changes} takes the results of manual image comparison using
the \code{\link{compare_images}} Shiny app and integrates them into the data
frame of image matches produced by \code{\link{identify_matches}} or
\code{\link{confirm_matches}}. Matches whose status was confirmed as either
"match" or "no match" will have their value in the \code{match} field updated
accordingly, and will additionally receive a TRUE value for a new \code{confirmed}
field which \code{integrate_changes} adds. Matches whose status was not
confirmed will have their \code{match} value unchanged, and will received a
\code{confirmed} value of FALSE. Matches which were highlighted using the in-app
interface will receive a TRUE value for a new \code{highlight} field.
}
\examples{
\dontrun{
# Setup
sigs <- create_signature(test_urls)
matches <- match_signatures(sigs)
result <- identify_matches(matches)

# Use compare_images to manually verify match status
change_table <- compare_images(result)

# Then integrate the changes into `result`
result <- integrate_changes(result, change_table)
}
}
